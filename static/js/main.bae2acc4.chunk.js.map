{"version":3,"sources":["reducers/gameReducer.js","actions/types.js","reducers/index.js","store/index.js","components/BeginGame/BeginGame.js","routes/Home.js","components/BetField/BetField.js","components/ActionList/ActionList.js","actions/cardsDeck.js","actions/gameStats.js","actions/cardGame.js","containers/PlayerActions/PlayerActions.js","containers/GameLayout/GameLayout.js","containers/StatsLayout/StatsLayout.js","components/Contender/Contender.js","containers/PlayArea/PlayArea.js","routes/Game.js","routes/App.js","index.js"],"names":["initialState","player","cards","count","wallet","bet","originalDeck","dealer","deck","playerFinished","isDeckLoaded","isPlaying","authReducer","state","action","type","data","betValue","createRootReducer","history","combineReducers","router","connectRouter","game","History","middleware","thunk","routerMiddleware","composedEnhancers","compose","applyMiddleware","createStore","BeginGame","props","className","to","Home","BetField","amount","placeBet","showField","betIp","useRef","min","ref","onClick","Number","current","value","ActionList","startDeal","addCard","clickStay","nextRound","isNextRoundBtnEnabled","isDealBtnEnabled","isDrawCardBtnEnabled","isStayBtnEnabled","defaultProps","shuffle","i","length","j","Math","floor","random","GAME_STATS","hasCardsDrawn","isGameOver","gameResult","calcCardTotal","Object","keys","reduce","total","card","cardValue","playerScore","dealerScore","drawCards","contenderObj","numberOfCards","contender","pop","push","dispatch","getState","processStay","slice","newPlayer","checkWinner","connect","GameLayout","this","shuffleCards","PlayerActions","Component","a","axios","get","then","response","shuffledCards","deskCards","readyToDeal","winner","Contender","cardDisplay","cardTotal","map","index","key","src","images","png","height","alt","code","Game","App","exact","path","component","ReactDOM","render","store","document","getElementById"],"mappings":"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","file":"static/js/main.bae2acc4.chunk.js","sourcesContent":["import * as ACTION_TYPES from '../actions/types';\n\nconst initialState = {\n  player: {\n    cards: [],\n    count: 0,\n    wallet: 100,\n    bet: 0\n  },\n  originalDeck: [],\n  dealer: {\n    cards: [],\n    count: 0\n  },\n  deck: [],\n  playerFinished: false,\n  isDeckLoaded: false,\n  isPlaying: false\n}\n\nexport default function authReducer(state = initialState, action) {\n  switch (action.type) {\n      case ACTION_TYPES.REQUEST_CARDS:\n      return {\n          ...state,\n          originalDeck: action.data,\n          deck: action.data,\n          isDeckLoaded: true\n      };\n      case ACTION_TYPES.PLACE_BET:\n      return {\n          ...state,\n          player: {\n            ...state.player,\n            wallet: state.player.wallet - action.betValue,\n            bet: action.betValue\n          }\n      };\n      case ACTION_TYPES.CARDS_DRAWN:\n      return {\n          ...state,\n          player: {\n            ...state.player,\n            cards: action.player.cards,\n            count: action.player.count\n          },\n          dealer: {\n            ...state.dealer,\n            cards: action.dealer.cards,\n            count: action.dealer.count\n\n          },\n          deck: action.deck,\n          isPlaying: true,\n          playerFinished: false\n      };\n      case ACTION_TYPES.ADD_CARD:\n      return {\n          ...state,\n          player: {\n            ...state.player,\n            cards: action.player.cards,\n            count: action.player.count\n          },\n          deck: action.deck,\n          playerFinished: false\n      };\n      case ACTION_TYPES.NEXT_ROUND:\n      return {\n          ...state,\n          player: {\n            cards: [],\n            count: 0,\n            wallet: state.player.wallet,\n            bet: 0\n          },\n          dealer: {\n            cards: [],\n            count: 0\n          },\n          deck: state.originalDeck,\n          playerFinished: false,\n          isPlaying: false\n      };\n    default:\n      return state;\n  }\n}","export const REQUEST_CARDS = \"REQUEST_CARDS\";\nexport const PLACE_BET = \"PLACE_BET\";\nexport const CARDS_DRAWN = \"CARDS_DRAWN\";\nexport const ADD_CARD = \"ADD_CARD\";\nexport const CLICK_STAY = \"CLICK_STAY\";\nexport const NEXT_ROUND = \"NEXT_ROUND\";\n","import { combineReducers } from 'redux';\nimport { connectRouter } from 'connected-react-router';\nimport game from './gameReducer';\n\nconst createRootReducer = (history) => combineReducers({\n    router: connectRouter(history),\n    game\n});\n\nexport default createRootReducer","import { createStore, applyMiddleware, compose } from 'redux';\nimport { routerMiddleware } from 'connected-react-router';\nimport thunk from 'redux-thunk';\nimport * as History from 'history';\nimport createRootReducer from '../reducers'\n\nexport const history = History.createBrowserHistory()\n\nconst initialState = {}\nconst enhancers = []\nconst middleware = [thunk, routerMiddleware(history)]\n\nif (process.env.NODE_ENV === 'development') {\n  const devToolsExtension = window.__REDUX_DEVTOOLS_EXTENSION__\n\n  if (typeof devToolsExtension === 'function') {\n    enhancers.push(devToolsExtension())\n  }\n}\n\nconst composedEnhancers = compose(\n  applyMiddleware(...middleware),\n  ...enhancers\n)\n\nexport default createStore(\n  createRootReducer(history),\n  initialState,\n  composedEnhancers\n)","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport './BeginGame.scss';\n\nconst BeginGame = (props) => {\n  return (\n    <div className=\"start-center\">\n      <h1>Black Jack</h1>\n      <Link className=\"button primary-button\" to=\"/game\">New Game</Link>\n    </div>\n  );\n}\n\nexport default BeginGame;\n","import React from 'react';\nimport BeginGame from '../components/BeginGame/BeginGame';\n\nconst Home = () => (\n    <BeginGame/>\n);\n\nexport default Home;","import React, { useRef } from 'react';\nimport PropTypes from 'prop-types';\nimport './BetField.scss';\n\nconst BetField = ({ amount, placeBet, bet, showField }) => {\n\tconst betIp = useRef(null);\n\tconst onButtonClick = () => {\n\t\tplaceBet(Number(betIp.current.value));\n\t};\n\n\treturn (\n\t\t<div className=\"betting-input\">\n            {!showField && \n\t\t\t<input type=\"number\" min={bet} ref={betIp} />\n            }\n            {!showField && \n\t\t\t<button className=\"button secondary-button\" onClick={onButtonClick}>\n\t\t\t\tPlace Bet\n\t\t\t</button>\n            }\n\t\t\t<div className=\"badge\">\n\t\t\t\tWallet : <strong>${amount}</strong>\n\t\t\t</div>\n\t\t\t{bet > 0 && (\n\t\t\t\t<div className=\"badge\">\n\t\t\t\t\tBet : <strong>${bet}</strong>\n\t\t\t\t</div>\n\t\t\t)}\n\t\t</div>\n\t);\n};\n\nBetField.propTypes = {\n\tamount: PropTypes.number.isRequired,\n\tbet: PropTypes.number.isRequired,\n\tplaceBet: PropTypes.func.isRequired,\n\tshowField: PropTypes.bool\n};\n\nexport default BetField;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport \"./ActionList.scss\"\n\nconst ActionList = ({\n    startDeal,\n    addCard,\n    clickStay,\n    nextRound,\n    isNextRoundBtnEnabled,\n    isDealBtnEnabled,\n    isDrawCardBtnEnabled,\n    isStayBtnEnabled\n}) => (\n  <div className=\"action-list\">\n    <ul>\n        <li className={isDealBtnEnabled ? 'active': 'disabled'}>\n            <button className=\"button secondary-button\" onClick={startDeal}>DEAL</button>\n        </li>\n        <li className={isDrawCardBtnEnabled ? 'active': 'disabled'}>\n            <button className=\"button secondary-button\" onClick={addCard}>ADD CARD</button>\n        </li>\n        <li className={isStayBtnEnabled ? 'active': 'disabled'}>\n            <button className=\"button secondary-button\" onClick={clickStay}>STAY</button>\n        </li>\n        <li className={isNextRoundBtnEnabled ? 'active': 'disabled'}>\n            <button className=\"button secondary-button\" onClick={nextRound}>CONTINUE GAME</button>\n        </li>\n    </ul>\n  </div>\n);\n\nActionList.propTypes = {\n  startDeal: PropTypes.func.isRequired,\n  addCard: PropTypes.func.isRequired,\n  clickStay: PropTypes.func.isRequired,\n  nextRound: PropTypes.func.isRequired,\n  isDealBtnEnabled: PropTypes.bool,\n  isDrawCardBtnEnabled: PropTypes.bool,\n  isStayBtnEnabled: PropTypes.bool,\n  isNextRoundBtnEnabled: PropTypes.bool\n};\n\nActionList.defaultProps = {\n    isDealBtnEnabled: false,\n    isDrawCardBtnEnabled: false,\n    isStayBtnEnabled: false,\n    isNextRoundBtnEnabled: false\n};\n\nexport default ActionList;\n","import * as ACTION_TYPES from './types';\nimport axios from 'axios';\n\nconst requestCards = data => {\n\treturn {\n\t\ttype: ACTION_TYPES.REQUEST_CARDS,\n\t\tdata\n\t};\n};\n\nconst shuffle = data => {\n  for (let i = data.length - 1; i > 0; i--) {\n    const j = Math.floor(Math.random() * (i + 1));\n    [data[i], data[j]] = [data[j], data[i]];\n  }\n\n  return data;\n};\n\nexport const fetchCards = options => {\n\treturn async (dispatch) => {\n\t\tconst deskCards = await axios.get('https://deckofcardsapi.com/api/deck/new/draw/?count=52').then((response) => {\n      \t\tconst shuffledCards = shuffle(response.data.cards)\n\t\t\tdispatch(requestCards(shuffledCards));\n\t\t});\n\t\treturn deskCards\n\t};\n};\n\nexport const placeBet = betValue => {\n\treturn {\n\t\ttype: ACTION_TYPES.PLACE_BET,\n\t\tbetValue\n\t};\n};","export const GAME_STATS = {\n  PLAYER: \"PLAYER\",\n  DEALER: \"DEALER\",\n  NOT_FINISHED: \"NOT_FINISHED\"\n};\nconst hasCardsDrawn = state => {\n  return state.player.cards.length > 0;\n};\nconst isGameOver = state => {\n  return gameResult(state) !== GAME_STATS.NOT_FINISHED;\n};\n\nexport const calcCardTotal = (cards) => {\n  let count = Object.keys(cards).reduce(function(total, card) {\n      let cardValue = cards[card].value\n      if (cardValue === 'JACK' || cardValue === 'QUEEN' || cardValue === 'KING') {\n          return total + 10;\n      }\n      else if (cardValue === 'ACE') {\n          return (total + 11 <= 21) ? total + 11 : total + 1;\n      } else {\n          return total +  Number(cardValue);\n      }\n }, 0);\n return count;\n};\n\nexport const gameResult = state => {\n  const playerScore = calcCardTotal(state.player.cards);\n\n  if (playerScore > 21) {\n    return GAME_STATS.DEALER;\n  }\n\n  if (!state.playerFinished) {\n    return GAME_STATS.NOT_FINISHED;\n  }\n\n  const dealerScore = calcCardTotal(state.dealer.cards);\n\n  if (playerScore > dealerScore || dealerScore > 21) {\n    return GAME_STATS.PLAYER;\n  }\n\n  if (dealerScore > playerScore) {\n    return GAME_STATS.DEALER;\n  }\n\n  return GAME_STATS.DEALER;\n};\n\nexport const checkWinner = (playerScore, dealerScore, player) => {\n  if (dealerScore > 21 || (dealerScore < playerScore)) {\n    return {\n      ...player,\n      wallet: player.wallet + 2 * player.bet\n    };\n  }\n\n  if (playerScore > 21 || (playerScore < dealerScore)) {\n    return {\n      ...player,\n      wallet: player.wallet\n    };\n  }\n\n  if (playerScore === dealerScore) {\n    return {\n      ...player,\n      wallet: player.wallet + player.bet\n    };\n  }\n};\n\nexport const isDealBtnEnabled = state => {\n  return !hasCardsDrawn(state) && state.player.bet >= 5;\n};\n\nexport const isDrawCardBtnEnabled = state => {\n  return (\n      hasCardsDrawn(state) && !isGameOver(state) && state.dealer.cards.length === 2\n  );\n};\nexport const isStayBtnEnabled = state => {\n  return hasCardsDrawn(state) && !isGameOver(state);\n};\nexport const isNextRoundBtnEnabled = state => {\n  return isGameOver(state);\n};","import * as ACTION_TYPES from './types';\nimport { calcCardTotal, checkWinner } from './gameStats';\n\nexport const nextRound = () => ({\n  type: ACTION_TYPES.NEXT_ROUND\n});\n\nexport const requestAddCard = ({player, deck}) => ({\n  type: ACTION_TYPES.ADD_CARD,\n  player,\n  deck\n});\n\nexport const requestStay = () => ({\n  type: ACTION_TYPES.CLICK_STAY\n});\n\nconst requestDrawCards  = ({player, dealer, deck}) => {\n  return {\n      type: ACTION_TYPES.CARDS_DRAWN,\n      player,\n      dealer,\n      deck\n  }\n}\n\nconst drawCards = (deck, contenderObj, numberOfCards) => {\n  let contender = {...contenderObj};\n\n  for (let i = 1; i <= numberOfCards; i++) {\n      let card = deck.pop();\n      contender.cards.push(card);\n  }\n  \n  contender.count = calcCardTotal(contender.cards);\n  return contender;\n};\n\nexport const startDeal  = () => {\n  return (dispatch, getState) => {\n      const { deck } = getState().game;\n      let player, dealer;\n\n      player = drawCards(deck, getState().game.player, 2);\n      dealer = drawCards(deck, getState().game.dealer, 2);\n       \n      dispatch(requestDrawCards({player, dealer, deck}));\n  }\n}\n\nexport const clickStay  = () => {\n  return (dispatch, getState) => {\n      let { deck, player, dealer } = getState().game;\n      dispatch(requestStay(processStay(player, dealer, deck)));\n  }\n}\n\nexport const addCard  = () => {\n  return (dispatch, getState) => {\n      const { deck } = getState().game;\n      let player;\n\n      player = drawCards(deck, getState().game.player, 1);\n       \n      dispatch(requestAddCard({player, deck}));\n  }\n}\n\nconst processStay = (player, dealer, deck) => {\n  const playerScore = calcCardTotal(player.cards);\n  const dealerScore = calcCardTotal(dealer.cards);\n\n  if (dealerScore < 17 && dealerScore < playerScore) {\n    const newDealer = {\n      ...dealer, \n      cards: [...dealer.cards, deck[0]]\n    }\n    const newDeck = deck.slice(1);\n    return processStay(player, newDealer, newDeck);\n  } else {\n    const newPlayer = checkWinner(playerScore, dealerScore, player);\n\n    return {\n      newPlayer,\n      dealer,\n      deck,\n      playerFinished: true\n    };\n  }\n};","import { connect } from 'react-redux';\nimport ActionList from '../../components/ActionList/ActionList';\nimport {\n\tisDealBtnEnabled,\n\tisDrawCardBtnEnabled,\n\tisStayBtnEnabled,\n\tisNextRoundBtnEnabled,\n\taddCard,\n\tstartDeal,\n\tclickStay,\n\tnextRound\n} from '../../actions';\n\nconst mapStateToProps = (state) => ({\n\tisDealBtnEnabled: isDealBtnEnabled(state.game),\n\tisDrawCardBtnEnabled: isDrawCardBtnEnabled(state.game),\n\tisStayBtnEnabled: isStayBtnEnabled(state.game),\n\tisNextRoundBtnEnabled: isNextRoundBtnEnabled(state.game)\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n\taddCard: () => dispatch(addCard()),\n\tstartDeal: () => dispatch(startDeal()),\n\tclickStay: () => dispatch(clickStay()),\n\tnextRound: () => dispatch(nextRound())\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ActionList);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport BetField from '../../components/BetField/BetField';\nimport PlayerActions from '../PlayerActions/PlayerActions';\nimport { fetchCards, placeBet, startDeal, addCard } from '../../actions';\n\nclass GameLayout extends Component {\n\tcomponentDidMount() {\n\t\tthis.props.shuffleCards();\n\t}\n\trender() {\n\t\treturn (\n\t\t\t<div className=\"box-section\">\n\t\t\t\t<BetField\n\t\t\t\t\tamount={this.props.player.wallet}\n\t\t\t\t\tbet={this.props.player.bet}\n\t\t\t\t\tplaceBet={this.props.placeBet}\n\t\t\t\t\tshowField={this.props.isPlaying}\n\t\t\t\t/>\n\t\t\t\t<PlayerActions />\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nconst mapStateToProps = (state) => ({\n\tplayer: state.game.player,\n\tdealer: state.game.dealer,\n\tisDeckLoaded: state.game.isDeckLoaded,\n\tisPlaying: state.game.isPlaying\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n\tshuffleCards: () => dispatch(fetchCards()),\n\tplaceBet: (betValue) => dispatch(placeBet(betValue)),\n\tstartDeal: () => dispatch(startDeal()),\n\taddCard: () => dispatch(addCard())\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(GameLayout);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { GAME_STATS, gameResult } from '../../actions';\nimport './StatsLayout.scss';\n\nconst Stats = ({ readyToDeal, winner, isPlaying }) => {\n\treturn (\n\t\t<div className=\"alert-section\">\n\t\t\t{!readyToDeal && winner === GAME_STATS.NOT_FINISHED && <h1>Place Bet to begin play </h1>}\n\t\t\t{readyToDeal && !isPlaying && <h1>Great, now click on Deal button to draw cards</h1>}\n\t\t\t{isPlaying && winner === GAME_STATS.NOT_FINISHED && <h1>Yell, Game is on</h1>}\n\t\t\t{winner === GAME_STATS.DEALER && <h1>Game Over! Dealer Won</h1>}\n\t\t\t{winner === GAME_STATS.PLAYER && <h1>Congratulations! You Won</h1>}\n\t\t</div>\n\t);\n};\n\nconst mapStateToProps = (state) => ({\n\tisPlaying: state.game.isPlaying,\n\treadyToDeal: state.game.player.bet >= 5,\n\twinner: gameResult(state.game)\n});\n\nexport default connect(mapStateToProps)(Stats);\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport './Contender.scss';\n\nconst Contender = (props) => {\n    return (\n        <div  className=\"box-section card-display\">\n            <div className=\"label\">{props.cardDisplay + \" \" + props.cardTotal}</div>\n            <ul>\n                {\n                    props.cards.map((card, index) => {\n                        return (\n                            <img  key={index} src={card.images.png} height=\"200\" alt={card.code}/>\n                        )\n                    })\n                }\n            </ul>\n        </div>\n    );\n};\n\nContender.propTypes = {\n    cardDisplay: PropTypes.string.isRequired,\n    cardTotal: PropTypes.number.isRequired\n};\n\nexport default Contender;","import React from 'react';\nimport { connect } from 'react-redux';\nimport Contender from '../../components/Contender/Contender';\n\nconst PlayArea = (props) => {\n\treturn (\n\t\t<div>\n\t\t\t{props.isPlaying && (\n\t\t\t\t<div>\n\t\t\t\t\t<div className=\"row\">\n\t\t\t\t\t\t<div className=\"col-6\">\n\t\t\t\t\t\t\t<Contender\n\t\t\t\t\t\t\t\tcardDisplay=\"Your Hand:\"\n\t\t\t\t\t\t\t\tcardTotal={props.player.count}\n\t\t\t\t\t\t\t\tcards={props.player.cards}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className=\"col-6\">\n                            This is not working, currently in progress\n\t\t\t\t\t\t\t<Contender\n\t\t\t\t\t\t\t\tcardDisplay=\"Computer Hand:\"\n\t\t\t\t\t\t\t\tcardTotal={props.player.count}\n\t\t\t\t\t\t\t\tcards={props.player.cards}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t<Contender cardDisplay=\"Dealer Hand:\" cardTotal={props.dealer.count} cards={props.dealer.cards} />\n\t\t\t\t</div>\n\t\t\t)}\n\t\t</div>\n\t);\n};\n\nconst mapStateToProps = (state) => ({\n\tisPlaying: state.game.isPlaying,\n\tdealer: state.game.dealer,\n\tplayer: state.game.player\n});\n\nexport default connect(mapStateToProps)(PlayArea);\n","import React from 'react';\nimport GameLayout from '../containers/GameLayout/GameLayout';\nimport StatsLayout from '../containers/StatsLayout/StatsLayout';\nimport PlayArea from '../containers/PlayArea/PlayArea';\n\nconst Game = () => (\n    <div className=\"container\">\n        <div className=\"row\">\n            <div className=\"col-12\">\n                <StatsLayout/>\n                <GameLayout />\n                <PlayArea/>\n            </div>\n        </div>\n    </div>\n);\n\nexport default Game;","import React from 'react';\nimport { Switch, Route } from 'react-router';\nimport Home from './Home';\nimport Game from './Game';\n\nconst App = () => (\n    <Switch>\n        <Route exact path=\"/\" component={Home} />\n        <Route exact path=\"/game\" component={Game} />\n    </Switch>\n)\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { ConnectedRouter } from 'connected-react-router';\nimport store, { history } from './store';\nimport App from './routes/App';\nimport './common/styles/main.scss';\n\nReactDOM.render(\n    <Provider store={store}>\n        <ConnectedRouter history={history}>\n            <App />\n        </ConnectedRouter>\n    </Provider>, document.getElementById('root'));"],"sourceRoot":""}